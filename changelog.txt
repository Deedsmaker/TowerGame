06.03.2025:
    - Changed compiler to msvc. 

05.03.2025:
    - For jump shooter added hit sparks.
    - Stability for particles work. (Reduced amount of calls like get_particle_emitter()->thing).
    - Line trail cool shit.
    - More particles work.
    - Increased lights count and temp lights count so we don't have funny bugs where someone turns off the lights.

04.03.2025:
    - Huge particles work. Added debris, emitter trails for particles, collision for particles, some fixes and worked on game particles itself.

03.03.2025:
    - Fixed tires for walls aswell.
    - Ability for particles to have 'children' emitters that it will emit at one time. Made that for blood emitter.
    - Fixed crash when we couldn't get particle emitter. There was just that we don't handle null on emitter follow entity, but that is something we need to think about - if we could not get emitter because all slots are occupied means some entity could have invalid emitter index till the end of his life. I think we just eventually tweak emitters count so that just will not happen with normal gameplay. But crashes should not pass in any case. 
    - More particles work. Enemies hit, trails etc.
    - Pitch increasing on centipede contiguous projectile hit.

02.03.2025:
    - Further particles work. Added possibility for particles to fade color instead of scale.
    - Texture rendering for particles.
    - Line rendering for particles.
    - Removed hash table usage outside entities. (Because that's not a real hash table so collisions don't handled at all). Now for textures and sound we use just a linear search. Also added missing texture and missing sound.
    - Ability for particles to grow after birth.
    - Renamed textures_table and sounds_table to textures_array and sounds_array.

01.03.2025:
    - Particles rework almost completed. It finally works. 
    - Mistake in continuous sword collision detection with wrong direction fixed.
    - Added and tested constexpr. Will be a good thing.

26.02.2025:
    - Improved jump buffer. Now jump buffer detects presses only in air. That caused us problems with platforms on high speeds.

25.02.2025:
    - Made sword spin collisions more precise by decreasing min rotation amount allowed.
    - Centipede shit fixed. This was because we inited it multiple times and it spawned multiple times. That could never happen if we don't spawn anything only in game state, but i don't know if it's actuall ya good approach. It may be. Now we spawn on init only things for centipede and it causes many confusions. Maybe we should go off that.
    - Checkpoints fully fixed and works better than ever (Maybe there's still blocks disappear, but did not noticed that after other fixes).
    - Tested game in full game speedrun a couple of times. Works fine.
    - Stability fixes.
    - Removed pause game state and instead we just have flag in state_context. That's add things to do when we think about what should happen and don't happen in pause, but we don't care SO much about PAUSE state and it can break things. I hope it did, because that would mean that this horrible bug when we changes in editor don't saved on entering game state, but i hope that's in the past.
    - Changed keys for pause and free cam.

24.02.2025:
    - Cleanup fixes after context refactor.
    - Further improvements of death instinct cooldown reason.
    - Improved light. Next shit need to be when we will go on fully enchancement of light.
    - Added ability to change numerical values of input fields by moving mouse.
    - Worked on checkpoints fix but they're still break things.

23.02.2025:
    - Improved the way death instinct cooldown starts - now he's checking for threat status to make cooldown more fair. For example we don't start cooldown if instinct reason was enemy flying towards if enemy is still alive - because that means player just evaded anyway (with that slow time-flow there's not really much time to change player character direction so that should mean player already was evading).
    - HUGE REFACTOR: Changed the way contextx work - now we can have separate level context that will help us load multtiple levels at once and do other cool shit like simulating game-state in editor to see how entities will look like some time in gameplay.

20.02.2025:
    - Bombe level work.
    - Lights improvements.
    - Added setting for trigger to draw lines to tracked enemies. Used that in latest level with spiky centipedes.
    - Checkpoint functionality. For checkpoints add 'checkpoint' to trigger name.

19.02.2025: 
    - Base version of camera system that tries to keep enemies in sight. Needs a lot of improvements, but that will be happening overtime, like happened with death instinct.
    - There was a real try on this climbing insane shit, but now it's really too complicated of a mechanic in this game. BUT now we should think about another speedboost for player so he really can hunt down these dogs. Or not...

18.02.2025:
    - Made that small temp lights don't make shadows and backshadows.
    - Added buffer for death instinct where it will check if enemy flying towards in first 0.5 sec where we won't start cooldown.
    - In shooting_practice level added last room with spin stop tutorial.

17.02.2025:
    - Made that lights that coming from enemy modifiers comes from always draw loop and that sticky texture queues them. Also sticky texture lines now goes there so we don't keep real sticky texture entity on player position.
    - Removed sticky texture from dead enemies and also we don't go in stun if hit dead enemy wrong way.
    - Birds attacking line (xaip).

16.02.2025:
    - Now we draw external lines of entities in separate entities loop that happen when we fill entities draw queue.
    - Made that enemy modifiers no longer draw lines passively. That's because lines is powerful tool to communicate information to player so we don't want too many of them constantly. We may want to highlight these modifiers more, like with light blobs.
    - Made some immediate mode for lights. First step to improving lights and also handy tool for highligting some entities. Right now we highlight blockers and sword size required guys.

13.02.2025:
    - Changed jump shooter blocker direction rendering to immediate, so it does not get affected by light.
    - 'fixed' jump shooter jiggle entering standing state by adding 0.4 sec buffer for air time. That's an issue with collision system and we'll look into that. Task is already in do-list.
    - Simplified player collisions with enemies when he can damage them.
    - Shooting practice level work. Last room left where we'll teach to stop spin.

12.02.2025:
    - Some more death instinct improvements.
    - Big sword practice level work. Should finish this today. Finished.
    - Shooting practice level markup.
    - Made player stun depends on app time instead of game time. That should give us more chance to recover on instinct error. We'll se how it goes. 
    - Added collisions to sword size required modifier.
    - Made last room in spin practice a bit easier.

11.02.2025:
    - Level work on tutorial practice.
    - Changed the way how death instinct works. Now timescale depends on distance to threat or to angle till explode in case of sword.
    - Maybe fixed some lighting entities copy bugs.

10.02.2025:
    - Fixed temp level loading issue. 
    - Fixed alpha with immediate stuff when lighting on.
    - Fixed sword kill sound when enemies kill themselves on player touch.
    - Maked text rendering in game (it's just notes).

09.02.2025:
    - Sword size required modifier for enemies.
    - Translated sticky texture to immediate drawing, so it's no longer affected by lighting.
    - Spin practice level.

08.02.2025:
    - Плейтест миша. 
    - Reduced delay to machinegun. This could make more accidential activations, but that should increase possibility of player to discover it. We may make a setting for increasing this delay.
    - Maked that after entering rifle mode you should press spin again to enter spin. That should help players understand sword modes.

07.02.2025:
    - Define for no editor mode.
    - Message at the end of the game for speedrun commands. Also message at death for restart key.
    - Sound on failed entering rifle mode and no ammo shoot try.
    - Level work on bombe level and made better shoot stoppers - now we can't pass through without killing them on all currrent levels.
    
06.02.2025:
    - Added scroll ability for create box and now we drawing texture preview on those.
    - Changed explosvie1 a little.
    - Added machinegun mode for rifle. Now just testing.
    - Changed collisions for work on dynamic array.
    - Playtest with kostet.
    - Now machinegun works after first shoot.
    - Arrows on shoot blockers.
    - On air tut1 made arrow pointing down, we'll see how it goes.
    - Blocker mark size won't shrink above 0.35 zoom.
    
05.02.2025:
    - Made that changing timescale in console will affect new time scale called "debug_target_time_scale". Also more tested our imaginary "updating" when on low timescale. Good enough for now.
    - Changed deleting in text input.

04.02.2025:
    - Improved death instinct a bit.
    - Increased centipedes size on bombe level. Should be easier to deal with explosives now.
    - Raycast thinking fixing.
    - Fixed performance issue with death instinct - seems like enemies was raycasting for really long distance for check if they should trigger instinct. Could look more on that later.
    - Changed air_tut level to have one group of enemies.
    - Added gives_ammo property in editor. Also changed inspector and saves for this.
